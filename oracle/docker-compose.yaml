version: '3'

services:

  input_db:
    image: gvenzl/oracle-xe
    container_name: input_db
    networks:
      - simple-network
    ports:
      - 1521:1521
    environment:
      ORACLE_PASSWORD: ${ORACLE_USER:-secret_password}
    volumes:
      - ./create_user.sql:/container-entrypoint-initdb.d/1.sql
      - ./create_flag.sh:/container-entrypoint-initdb.d/9.sh
    healthcheck:
      test: ["CMD", "sh", "-c", "if [ -e /opt/oracle/flag ]; then exit 0; else exit 1; fi"]
      interval: "6s"
      timeout: "6s"
      start_period: "6s"
      retries: 60

  output_db:
    image: gvenzl/oracle-xe
    container_name: output_db
    networks:
      - simple-network
    ports:
      - 1522:1521
    environment:
      ORACLE_PASSWORD: ${ORACLE_USER:-secret_password}
    volumes:
      - ./create_user.sql:/container-entrypoint-initdb.d/1.sql
    healthcheck:
      test: "/opt/oracle/healthcheck.sh"
      interval: "3s"
      timeout: "3s"
      start_period: "3s"
      retries: 30

  databases:
    container_name: databases
    image: synthesizedio/whalesay
    command: >
      cowsay
        "Both databases have been started and are ready for TDK exercises!"
    depends_on:
      input_db:
        condition: service_healthy
      output_db:
        condition: service_healthy


  tdk:
    extends:
      file: ../parent-compose.yml
      service: tdk
    networks:
      - simple-network
    environment:
      SYNTHESIZED_INPUT_URL: jdbc:oracle:thin:@input_db:1521:xe
      SYNTHESIZED_INPUT_USERNAME: test
      SYNTHESIZED_INPUT_PASSWORD: test
      SYNTHESIZED_OUTPUT_URL: jdbc:oracle:thin:@output_db:1521:xe
      SYNTHESIZED_OUTPUT_USERNAME: test
      SYNTHESIZED_OUTPUT_PASSWORD: test
      SYNTHESIZED_USERCONFIG_FILE: /app/config.yaml
      TDK_WORKINGDIRECTORY_PATH: /app/data
      SYNTHESIZED_KEY: ${SYNTHESIZED_KEY}
      # TDK_WORKINGDIRECTORY_ENABLED: "true"
      JAVA_TOOL_OPTIONS: >
        -Dlogging.level.io.synthesized.tdk.executor.lite.LiteTransformer=INFO
        -Dlogging.level.io.synthesized.tdk=WARN
        -Dlogging.level.com.zaxxer.hikari=WARN
        -Dlogging.level.org.reflections=WARN
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=80.0
        -Dspring.main.banner-mode=CONSOLE
        -Dspring.banner.location=file:/app/banner.txt
    volumes:
      - ./${CONFIG_FILE}:/app/config.yaml
      - ./banner.txt:/app/banner.txt
    depends_on:
      databases:
        condition: service_completed_successfully

  ora2pg:
    image: georgmoser/ora2pg
    networks:
      - simple-network
    container_name: ora2pg
    volumes:
      - ./postgres_output_data:/data
      - ./ora2pg.conf:/config/ora2pg.conf
    environment:
      - CONFIG_LOCATION=config/ora2pg.conf


  postgres_masked:
    image: postgres:16
    container_name: postgres_masked
    networks:
      - simple-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./postgres_output_data/TABLE_TEST_output.sql:/docker-entrypoint-initdb.d/1.sql
      - ./postgres_output_data/VIEW_TEST_output.sql:/docker-entrypoint-initdb.d/2.sql
      - ./postgres_output_data/SEQUENCE_TEST_output.sql:/docker-entrypoint-initdb.d/3.sql
      - ./postgres_output_data/COPY_TEST_output.sql:/docker-entrypoint-initdb.d/4.sql
    ports: [ "5432:5432" ]

  check:
    container_name: check
    image: sodadata/soda-core
    networks:
      - simple-network
    volumes:
      - ./soda:/sodacl

networks:
  simple-network:
